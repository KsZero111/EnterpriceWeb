// <auto-generated />
using System;
using EnterpriceWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnterpriceWeb.Migrations
{
    [DbContext(typeof(AppDbConText))]
    partial class AppDbConTextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EnterpriceWeb.Models.Article", b =>
                {
                    b.Property<int>("article_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("article_accept_date")
                        .HasColumnType("longtext");

                    b.Property<string>("article_avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("article_status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("article_submit_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("article_title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("article_views")
                        .HasColumnType("longtext");

                    b.Property<int>("magazine_id")
                        .HasColumnType("int");

                    b.Property<int>("us_id")
                        .HasColumnType("int");

                    b.HasKey("article_id");

                    b.HasIndex("magazine_id");

                    b.HasIndex("us_id");

                    b.ToTable("articles");
                });

            modelBuilder.Entity("EnterpriceWeb.Models.Article_file", b =>
                {
                    b.Property<int>("article_file_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("article_file_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("article_file_type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("article_id")
                        .HasColumnType("int");

                    b.HasKey("article_file_id");

                    b.ToTable("article_Files");
                });

            modelBuilder.Entity("EnterpriceWeb.Models.Faculty", b =>
                {
                    b.Property<int>("f_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("f_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("f_status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("f_id");

                    b.ToTable("faculties");

                    b.HasData(
                        new
                        {
                            f_id = 1,
                            f_name = "faculty1",
                            f_status = "1"
                        },
                        new
                        {
                            f_id = 2,
                            f_name = "faculty2",
                            f_status = "1"
                        },
                        new
                        {
                            f_id = 3,
                            f_name = "faculty3",
                            f_status = "1"
                        },
                        new
                        {
                            f_id = 999,
                            f_name = "All",
                            f_status = "1"
                        });
                });

            modelBuilder.Entity("EnterpriceWeb.Models.Feedback", b =>
                {
                    b.Property<int>("fb_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("article_id")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("us_id")
                        .HasColumnType("int");

                    b.HasKey("fb_id");

                    b.HasIndex("article_id");

                    b.HasIndex("us_id");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("EnterpriceWeb.Models.Magazine", b =>
                {
                    b.Property<int>("magazine_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("magazine_academic_year")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("magazine_closure_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("magazine_deleted")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("magazine_final_closure_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("magazine_status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("magazine_title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("magazine_id");

                    b.ToTable("magazines");

                    b.HasData(
                        new
                        {
                            magazine_id = 1,
                            magazine_academic_year = "2019-2024",
                            magazine_closure_date = new DateTime(2024, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            magazine_deleted = "0",
                            magazine_final_closure_date = new DateTime(2024, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            magazine_status = "0",
                            magazine_title = "Tabloid"
                        });
                });

            modelBuilder.Entity("EnterpriceWeb.Models.User", b =>
                {
                    b.Property<int>("us_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("f_id")
                        .HasColumnType("int");

                    b.Property<string>("us_end_year")
                        .HasColumnType("longtext");

                    b.Property<string>("us_gender")
                        .HasColumnType("longtext");

                    b.Property<string>("us_gmail")
                        .HasColumnType("longtext");

                    b.Property<string>("us_image")
                        .HasColumnType("longtext");

                    b.Property<string>("us_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("us_password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("us_phone")
                        .HasColumnType("longtext");

                    b.Property<string>("us_role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("us_start_year")
                        .HasColumnType("longtext");

                    b.HasKey("us_id");

                    b.HasIndex("f_id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            us_id = 1,
                            f_id = 999,
                            us_gmail = "admin",
                            us_image = "fad8651c-32cc-4620-ba7d-c74efa72e006pngwing.com (2).jpg",
                            us_name = "nhancho",
                            us_password = "admin",
                            us_phone = "07788880524",
                            us_role = "admin"
                        },
                        new
                        {
                            us_id = 2,
                            f_id = 1,
                            us_gmail = "hpthkl@gmail.com",
                            us_image = "fad8651c-32cc-4620-ba7d-c74efa72e006pngwing.com (2).jpg",
                            us_name = "coordinator",
                            us_password = "123",
                            us_phone = "07788880524",
                            us_role = "coordinator"
                        },
                        new
                        {
                            us_id = 3,
                            f_id = 999,
                            us_gmail = "marketingmanager",
                            us_image = "fad8651c-32cc-4620-ba7d-c74efa72e006pngwing.com (2).jpg",
                            us_name = "marketingmanager",
                            us_password = "123",
                            us_phone = "07788880524",
                            us_role = "marketingmanager"
                        },
                        new
                        {
                            us_id = 4,
                            f_id = 1,
                            us_gmail = "student",
                            us_image = "fad8651c-32cc-4620-ba7d-c74efa72e006pngwing.com (2).jpg",
                            us_name = "student",
                            us_password = "123",
                            us_phone = "07788880524",
                            us_role = "student"
                        });
                });

            modelBuilder.Entity("EnterpriceWeb.Models.Article", b =>
                {
                    b.HasOne("EnterpriceWeb.Models.Magazine", "magazine")
                        .WithMany()
                        .HasForeignKey("magazine_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnterpriceWeb.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("us_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("magazine");

                    b.Navigation("user");
                });

            modelBuilder.Entity("EnterpriceWeb.Models.Feedback", b =>
                {
                    b.HasOne("EnterpriceWeb.Models.Article", "Article")
                        .WithMany()
                        .HasForeignKey("article_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnterpriceWeb.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("us_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EnterpriceWeb.Models.User", b =>
                {
                    b.HasOne("EnterpriceWeb.Models.Faculty", "faculty")
                        .WithMany()
                        .HasForeignKey("f_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("faculty");
                });
#pragma warning restore 612, 618
        }
    }
}
